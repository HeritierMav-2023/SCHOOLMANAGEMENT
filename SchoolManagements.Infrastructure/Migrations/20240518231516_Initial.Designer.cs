// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolManagements.Infrastructure.Persistences;

#nullable disable

namespace SchoolManagements.Infrastructure.Migrations
{
    [DbContext(typeof(SchoolManagementDbContext))]
    [Migration("20240518231516_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("sm")
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolManagements.Domain.Entities.AcademicMonth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MonthId")
                        .HasColumnType("int");

                    b.Property<string>("MonthName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("monthlyPaymentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("monthlyPaymentId");

                    b.ToTable("AcademicMonth", "sm");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Department", "sm");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4655),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4660),
                            DepartmentName = "Teacher",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4659)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4669),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4670),
                            DepartmentName = "Account",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4670)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4671),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4672),
                            DepartmentName = "Administration",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4672)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4673),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4673),
                            DepartmentName = "Student Affairs",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4673)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4674),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4675),
                            DepartmentName = "Counseling",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4674)
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4675),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4676),
                            DepartmentName = "Sports",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4676)
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4677),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4677),
                            DepartmentName = "Library",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4677)
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4678),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4679),
                            DepartmentName = "Maintenance",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4678)
                        });
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.DueBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DueBalanceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MonthlyPaymentId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonthlyPaymentId");

                    b.HasIndex("StudentId");

                    b.ToTable("DueBalance", "sm");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.ExamSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamScheduleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExamenSchedule", "sm");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.ExamScheduleStandard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExamScheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StandardId")
                        .HasColumnType("int");

                    b.Property<int?>("StandardId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExamScheduleId");

                    b.HasIndex("StandardId");

                    b.HasIndex("StandardId1");

                    b.ToTable("ExamScheduleStandard", "sm");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.ExamSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExamDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExamEndTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExamScheduleStandardId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExamStartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExamScheduleStandardId");

                    b.HasIndex("ExamTypeId");

                    b.HasIndex("SubjectId");

                    b.ToTable("ExamSubject", "sm");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.ExamType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExamType", "sm");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4823),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4823),
                            ExamTypeName = "Midterm",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4823)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4829),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4830),
                            ExamTypeName = "Final",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4829)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4832),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4833),
                            ExamTypeName = "Practical",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4833)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4834),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4835),
                            ExamTypeName = "Monthly Exam",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4834)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4835),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4836),
                            ExamTypeName = "Lab Exam",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4836)
                        });
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.Fee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FeeTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentFrequency")
                        .HasColumnType("int");

                    b.Property<int>("StandardId")
                        .HasColumnType("int");

                    b.Property<int?>("monthlyPaymentId")
                        .HasColumnType("int");

                    b.Property<int?>("othersPaymentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeeTypeId");

                    b.HasIndex("StandardId");

                    b.HasIndex("monthlyPaymentId");

                    b.HasIndex("othersPaymentId");

                    b.ToTable("Fee", "sm");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1500m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5361),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5362),
                            DueDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 1,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5361),
                            PaymentFrequency = 1,
                            StandardId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 500m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5367),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5368),
                            DueDate = new DateTime(2023, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 2,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5367),
                            PaymentFrequency = 0,
                            StandardId = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 200m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5371),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5371),
                            DueDate = new DateTime(2023, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 3,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5371),
                            PaymentFrequency = 0,
                            StandardId = 1
                        },
                        new
                        {
                            Id = 4,
                            Amount = 100m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5374),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5374),
                            DueDate = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 6,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5374),
                            PaymentFrequency = 0,
                            StandardId = 1
                        },
                        new
                        {
                            Id = 5,
                            Amount = 250m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5398),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5399),
                            DueDate = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 5,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5399),
                            PaymentFrequency = 5,
                            StandardId = 1
                        },
                        new
                        {
                            Id = 6,
                            Amount = 300m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5414),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5415),
                            DueDate = new DateTime(2023, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 4,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5414),
                            PaymentFrequency = 5,
                            StandardId = 1
                        },
                        new
                        {
                            Id = 7,
                            Amount = 1500m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5418),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5418),
                            DueDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 1,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5418),
                            PaymentFrequency = 1,
                            StandardId = 2
                        },
                        new
                        {
                            Id = 8,
                            Amount = 500m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5421),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5421),
                            DueDate = new DateTime(2023, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 2,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5421),
                            PaymentFrequency = 0,
                            StandardId = 2
                        },
                        new
                        {
                            Id = 9,
                            Amount = 200m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5424),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5424),
                            DueDate = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 3,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5424),
                            PaymentFrequency = 0,
                            StandardId = 2
                        },
                        new
                        {
                            Id = 10,
                            Amount = 100m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5427),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5427),
                            DueDate = new DateTime(2023, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 6,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5427),
                            PaymentFrequency = 0,
                            StandardId = 2
                        },
                        new
                        {
                            Id = 11,
                            Amount = 250m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5430),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5430),
                            DueDate = new DateTime(2023, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 5,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5430),
                            PaymentFrequency = 5,
                            StandardId = 2
                        },
                        new
                        {
                            Id = 12,
                            Amount = 300m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5433),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5433),
                            DueDate = new DateTime(2023, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 4,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5433),
                            PaymentFrequency = 5,
                            StandardId = 2
                        },
                        new
                        {
                            Id = 13,
                            Amount = 1500m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5436),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5436),
                            DueDate = new DateTime(2023, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 1,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5436),
                            PaymentFrequency = 1,
                            StandardId = 3
                        },
                        new
                        {
                            Id = 14,
                            Amount = 500m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5439),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5439),
                            DueDate = new DateTime(2023, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 2,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5439),
                            PaymentFrequency = 0,
                            StandardId = 3
                        },
                        new
                        {
                            Id = 15,
                            Amount = 200m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5442),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5442),
                            DueDate = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 3,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5442),
                            PaymentFrequency = 0,
                            StandardId = 3
                        },
                        new
                        {
                            Id = 16,
                            Amount = 100m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5445),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5445),
                            DueDate = new DateTime(2023, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 6,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5445),
                            PaymentFrequency = 0,
                            StandardId = 3
                        },
                        new
                        {
                            Id = 17,
                            Amount = 250m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5448),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5448),
                            DueDate = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 5,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5448),
                            PaymentFrequency = 5,
                            StandardId = 3
                        },
                        new
                        {
                            Id = 18,
                            Amount = 300m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5453),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5453),
                            DueDate = new DateTime(2023, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 4,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5453),
                            PaymentFrequency = 5,
                            StandardId = 3
                        },
                        new
                        {
                            Id = 19,
                            Amount = 1500m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5458),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5459),
                            DueDate = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 1,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5459),
                            PaymentFrequency = 1,
                            StandardId = 4
                        },
                        new
                        {
                            Id = 20,
                            Amount = 500m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5461),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5462),
                            DueDate = new DateTime(2023, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeTypeId = 2,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5462),
                            PaymentFrequency = 0,
                            StandardId = 4
                        });
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.FeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FeeType", "sm");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4873),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4873),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4873),
                            TypeName = "Registration Fee"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4876),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4876),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4876),
                            TypeName = "Tuition Fee"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4877),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4878),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4877),
                            TypeName = "Library Fee"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4879),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4879),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4879),
                            TypeName = "Examination Fee"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4880),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4881),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4880),
                            TypeName = "Sports Fee"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4881),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4882),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4882),
                            TypeName = "Transportation Fee"
                        });
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.MonthlyPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountRemaining")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PreviousDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalFeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Waver")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("MonthlyPayment", "sm");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.OtherPaymentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OthersPaymentId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OthersPaymentId");

                    b.ToTable("OtherPaymentDetail", "sm");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.OthersPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountRemaining")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("OthersPayment", "sm");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.PaymentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MonthlyPaymentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonthlyPaymentId");

                    b.ToTable("PaymentDetail", "sm");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.PaymentMonth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MonthName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MonthlyPaymentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonthlyPaymentId");

                    b.ToTable("PaymentMonth", "sm");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BankAccountNumber")
                        .HasColumnType("int");

                    b.Property<string>("BankBranch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("Designation")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime?>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StaffSalaryId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemporaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniqueStaffAttendanceNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("StaffSalaryId");

                    b.HasIndex("UniqueStaffAttendanceNumber")
                        .IsUnique();

                    b.ToTable("Staff", "sm");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BankAccountName = "John Doe",
                            BankAccountNumber = 1234567890,
                            BankBranch = "XYZ Branch",
                            BankName = "ABC Bank",
                            ContactNumber1 = "1234567890",
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5311),
                            DOB = new DateTime(1985, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5311),
                            DepartmentId = 1,
                            Designation = 13,
                            Email = "john.doe@example.com",
                            FatherName = "Michael Doe",
                            Gender = 0,
                            JoiningDate = new DateTime(2010, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5311),
                            MotherName = "Alice Doe",
                            PermanentAddress = "Permanent Address",
                            Qualifications = "Bachelor's in Computer Science",
                            StaffName = "Jamir King",
                            StaffSalaryId = 1,
                            Status = "Active",
                            TemporaryAddress = "Temporary Address",
                            UniqueStaffAttendanceNumber = 201
                        },
                        new
                        {
                            Id = 2,
                            BankAccountName = "Alice Smith",
                            BankAccountNumber = 9873210,
                            BankBranch = "UVW Branch",
                            BankName = "DEF Bank",
                            ContactNumber1 = "9876543210",
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5323),
                            DOB = new DateTime(1990, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5324),
                            DepartmentId = 2,
                            Designation = 2,
                            Email = "alice.smith@example.com",
                            FatherName = "David Smith",
                            Gender = 1,
                            JoiningDate = new DateTime(2015, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5323),
                            MotherName = "Emily Smith",
                            PermanentAddress = "Permanent Address",
                            Qualifications = "Master's in Education",
                            StaffName = "Jamir Jamidar",
                            StaffSalaryId = 2,
                            Status = "Active",
                            TemporaryAddress = "Temporary Address",
                            UniqueStaffAttendanceNumber = 202
                        },
                        new
                        {
                            Id = 3,
                            BankAccountName = "John Doe",
                            BankAccountNumber = 1234567890,
                            BankBranch = "Main Street",
                            BankName = "Anytown Bank",
                            ContactNumber1 = "555-123-4567",
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5331),
                            DOB = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5331),
                            DepartmentId = 3,
                            Designation = 7,
                            Email = "john.doe@example.com",
                            FatherName = "Richard Doe",
                            Gender = 0,
                            JoiningDate = new DateTime(2020, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5331),
                            MotherName = "Jane Doe",
                            PermanentAddress = "456 Elm Street, Anytown",
                            Qualifications = "Bachelor of Science in Mathematics",
                            StaffName = "Jamir Amir",
                            StaffSalaryId = 3,
                            Status = "Active",
                            TemporaryAddress = "123 Main Street, Anytown",
                            UniqueStaffAttendanceNumber = 203
                        });
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.StaffExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Achievements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LeavingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Responsibilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffExperience", "sm");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Achievements = "Received Employee of the Month award.",
                            CompanyName = "ABC Company",
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5258),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5258),
                            Designation = "Software Engineer",
                            JoiningDate = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeavingDate = new DateTime(2022, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5258),
                            Responsibilities = "Developed web applications."
                        },
                        new
                        {
                            Id = 2,
                            Achievements = "Implemented a new data visualization system.",
                            CompanyName = "XYZ Corporation",
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5268),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5268),
                            Designation = "Data Analyst",
                            JoiningDate = new DateTime(2018, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeavingDate = new DateTime(2020, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5268),
                            Responsibilities = "Analyzed data to provide insights."
                        },
                        new
                        {
                            Id = 3,
                            Achievements = "Successfully delivered multiple projects on time.",
                            CompanyName = "EFG Ltd.",
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5282),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5282),
                            Designation = "Project Manager",
                            JoiningDate = new DateTime(2016, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeavingDate = new DateTime(2018, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5282),
                            Responsibilities = "Led a team of developers."
                        });
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.StaffSalary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Allowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BasicSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("FestivalBonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HousingAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MedicalAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("NetSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SavingFund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StaffName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Taxes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TransportationAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("StaffSalary", "sm");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Allowance = 500m,
                            BasicSalary = 5000m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4911),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4912),
                            FestivalBonus = 1000m,
                            HousingAllowance = 800m,
                            MedicalAllowance = 300m,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4912),
                            SavingFund = 200m,
                            StaffName = "Jamir King",
                            Taxes = 500m,
                            TransportationAllowance = 200m
                        },
                        new
                        {
                            Id = 2,
                            Allowance = 500m,
                            BasicSalary = 5000m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4919),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4920),
                            FestivalBonus = 1000m,
                            HousingAllowance = 800m,
                            MedicalAllowance = 300m,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4920),
                            SavingFund = 200m,
                            StaffName = "Jamir Jamidar",
                            Taxes = 500m,
                            TransportationAllowance = 200m
                        },
                        new
                        {
                            Id = 3,
                            Allowance = 500m,
                            BasicSalary = 5000m,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4927),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4927),
                            FestivalBonus = 1000m,
                            HousingAllowance = 800m,
                            MedicalAllowance = 300m,
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4927),
                            SavingFund = 200m,
                            StaffName = "Jamir Amir",
                            Taxes = 500m,
                            TransportationAllowance = 200m
                        });
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.Standard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StandardCapacity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StandardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Standard", "sm");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4968),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4969),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4969),
                            StandardCapacity = "30",
                            StandardName = "Class One"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4972),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4973),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4972),
                            StandardCapacity = "35",
                            StandardName = "Class Two"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4974),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4975),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4975),
                            StandardCapacity = "32",
                            StandardName = "Class Three"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4976),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4976),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4976),
                            StandardCapacity = "28",
                            StandardName = "Class Four"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4977),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4978),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4978),
                            StandardCapacity = "30",
                            StandardName = "Class Five"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4979),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4979),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4979),
                            StandardCapacity = "30",
                            StandardName = "Class Six"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4980),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4981),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4981),
                            StandardCapacity = "30",
                            StandardName = "Class Seven"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4982),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4983),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4982),
                            StandardCapacity = "30",
                            StandardName = "Class Eight"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4983),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4984),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4984),
                            StandardCapacity = "30",
                            StandardName = "Class Nine"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4985),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4986),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(4985),
                            StandardCapacity = "30",
                            StandardName = "Class Ten"
                        });
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdmissionNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EnrollmentNo")
                        .HasColumnType("int");

                    b.Property<string>("FatherContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherNID")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGuardianContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGuardianName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotherContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherNID")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StandardId")
                        .HasColumnType("int");

                    b.Property<string>("StudentBloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentContactNumber1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentContactNumber2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StudentDOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudentEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentGender")
                        .HasColumnType("int");

                    b.Property<string>("StudentNIDNumber")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentReligion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemporaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniqueStudentAttendanceNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StandardId");

                    b.HasIndex("UniqueStudentAttendanceNumber")
                        .IsUnique();

                    b.ToTable("Student", "sm");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdmissionNo = 1000,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5011),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5012),
                            EnrollmentNo = 2000,
                            FatherContactNumber = "9876543210",
                            FatherNID = "17948678987624322",
                            FatherName = "Michael Doe",
                            LocalGuardianContactNumber = "9876543230",
                            LocalGuardianName = "Jane Smith",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5011),
                            MotherContactNumber = "9876543220",
                            MotherNID = "17948678987754322",
                            MotherName = "Alice Doe",
                            PermanentAddress = "123 Main Street, City, Country",
                            StandardId = 1,
                            StudentBloodGroup = "A+",
                            StudentContactNumber1 = "1234567890",
                            StudentDOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentEmail = "john.doe@example.com",
                            StudentGender = 0,
                            StudentNIDNumber = "12345678901234567",
                            StudentName = "John Doe",
                            StudentNationality = "Bangladeshi",
                            TemporaryAddress = "456 Elm Street, City, Country",
                            UniqueStudentAttendanceNumber = 1000
                        },
                        new
                        {
                            Id = 2,
                            AdmissionNo = 1001,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5019),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5020),
                            EnrollmentNo = 2001,
                            FatherContactNumber = "9876543220",
                            FatherNID = "12345678901234567",
                            FatherName = "Abdul Rahman",
                            LocalGuardianContactNumber = "9876543240",
                            LocalGuardianName = "Kamal Ahmed",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5020),
                            MotherContactNumber = "9876543230",
                            MotherNID = "12345678901234568",
                            MotherName = "Ayesha Rahman",
                            PermanentAddress = "Dhaka, Bangladesh",
                            StandardId = 1,
                            StudentBloodGroup = "B+",
                            StudentContactNumber1 = "9876543210",
                            StudentDOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentEmail = "fatima.rahman@example.com",
                            StudentGender = 1,
                            StudentNIDNumber = "12345678901234567",
                            StudentName = "Fatima Rahman",
                            StudentNationality = "Bangladeshi",
                            TemporaryAddress = "Dhaka, Bangladesh",
                            UniqueStudentAttendanceNumber = 1001
                        },
                        new
                        {
                            Id = 3,
                            AdmissionNo = 1002,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5025),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5025),
                            EnrollmentNo = 2002,
                            FatherContactNumber = "9876543221",
                            FatherNID = "98765432109876544",
                            FatherName = "Rahim Khan",
                            LocalGuardianContactNumber = "9876543241",
                            LocalGuardianName = "Kamal Ahmed",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5025),
                            MotherContactNumber = "9876543231",
                            MotherNID = "98765432109876545",
                            MotherName = "Fatima Khan",
                            PermanentAddress = "Chittagong, Bangladesh",
                            StandardId = 1,
                            StudentBloodGroup = "O+",
                            StudentContactNumber1 = "9876543211",
                            StudentDOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentEmail = "aryan.khan@example.com",
                            StudentGender = 0,
                            StudentNIDNumber = "98765432109876543",
                            StudentName = "Aryan Khan",
                            StudentNationality = "Bangladeshi",
                            TemporaryAddress = "Chittagong, Bangladesh",
                            UniqueStudentAttendanceNumber = 1002
                        },
                        new
                        {
                            Id = 4,
                            AdmissionNo = 1003,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5029),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5030),
                            EnrollmentNo = 2003,
                            FatherContactNumber = "9876543222",
                            FatherNID = "76543210987654322",
                            FatherName = "Mahmud Ahmed",
                            LocalGuardianContactNumber = "9876543242",
                            LocalGuardianName = "Nadia Rahman",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5029),
                            MotherContactNumber = "9876543232",
                            MotherNID = "76543210987654323",
                            MotherName = "Farida Ahmed",
                            PermanentAddress = "Sylhet, Bangladesh",
                            StandardId = 2,
                            StudentBloodGroup = "AB+",
                            StudentContactNumber1 = "9876543212",
                            StudentDOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentEmail = "tasnim.ahmed@example.com",
                            StudentGender = 1,
                            StudentNIDNumber = "76543210987654321",
                            StudentName = "Tasnim Ahmed",
                            StudentNationality = "Bangladeshi",
                            TemporaryAddress = "Sylhet, Bangladesh",
                            UniqueStudentAttendanceNumber = 1003
                        },
                        new
                        {
                            Id = 5,
                            AdmissionNo = 1004,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5033),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5034),
                            EnrollmentNo = 2004,
                            FatherContactNumber = "9876543223",
                            FatherNID = "87654321098765433",
                            FatherName = "Nasir Khan",
                            LocalGuardianContactNumber = "9876543243",
                            LocalGuardianName = "Abdul Ali",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5033),
                            MotherContactNumber = "9876543233",
                            MotherNID = "87654321098765434",
                            MotherName = "Sadia Khan",
                            PermanentAddress = "Rajshahi, Bangladesh",
                            StandardId = 2,
                            StudentBloodGroup = "A-",
                            StudentContactNumber1 = "9876543213",
                            StudentDOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentEmail = "imran.khan@example.com",
                            StudentGender = 0,
                            StudentNIDNumber = "87654321098765432",
                            StudentName = "Imran Khan",
                            StudentNationality = "Bangladeshi",
                            TemporaryAddress = "Rajshahi, Bangladesh",
                            UniqueStudentAttendanceNumber = 1004
                        },
                        new
                        {
                            Id = 6,
                            AdmissionNo = 1005,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5037),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5038),
                            EnrollmentNo = 2005,
                            FatherContactNumber = "9876543224",
                            FatherNID = "65432109876543211",
                            FatherName = "Hasan Rahman",
                            LocalGuardianContactNumber = "9876543244",
                            LocalGuardianName = "Khaled Islam",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5037),
                            MotherContactNumber = "9876543234",
                            MotherNID = "65432109876543212",
                            MotherName = "Sabina Rahman",
                            PermanentAddress = "Dhaka, Bangladesh",
                            StandardId = 2,
                            StudentBloodGroup = "B-",
                            StudentContactNumber1 = "9876543214",
                            StudentDOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentEmail = "anika.rahman@example.com",
                            StudentGender = 1,
                            StudentNIDNumber = "65432109876543210",
                            StudentName = "Anika Rahman",
                            StudentNationality = "Bangladeshi",
                            TemporaryAddress = "Dhaka, Bangladesh",
                            UniqueStudentAttendanceNumber = 1005
                        },
                        new
                        {
                            Id = 7,
                            AdmissionNo = 1006,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5083),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5084),
                            EnrollmentNo = 2006,
                            FatherContactNumber = "9876543225",
                            FatherNID = "54321098765432110",
                            FatherName = "Rahman Islam",
                            LocalGuardianContactNumber = "9876543245",
                            LocalGuardianName = "Farid Ahmed",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5083),
                            MotherContactNumber = "9876543235",
                            MotherNID = "54321098765432111",
                            MotherName = "Amina Islam",
                            PermanentAddress = "Chittagong, Bangladesh",
                            StandardId = 3,
                            StudentBloodGroup = "O-",
                            StudentContactNumber1 = "9876543215",
                            StudentDOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentEmail = "rafiul.islam@example.com",
                            StudentGender = 0,
                            StudentNIDNumber = "54321098765432109",
                            StudentName = "Rafiul Islam",
                            StudentNationality = "Bangladeshi",
                            TemporaryAddress = "Chittagong, Bangladesh",
                            UniqueStudentAttendanceNumber = 1006
                        },
                        new
                        {
                            Id = 8,
                            AdmissionNo = 1007,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5087),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5088),
                            EnrollmentNo = 2007,
                            FatherContactNumber = "9876543226",
                            FatherNID = "43210987654321099",
                            FatherName = "Akram Khan",
                            LocalGuardianContactNumber = "9876543246",
                            LocalGuardianName = "Ayesha Begum",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5088),
                            MotherContactNumber = "9876543236",
                            MotherNID = "43210987654321100",
                            MotherName = "Taslima Khan",
                            PermanentAddress = "Rajshahi, Bangladesh",
                            StandardId = 3,
                            StudentBloodGroup = "AB-",
                            StudentContactNumber1 = "9876543216",
                            StudentDOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentEmail = "zara.khan@example.com",
                            StudentGender = 1,
                            StudentNIDNumber = "43210987654321098",
                            StudentName = "Zara Khan",
                            StudentNationality = "Bangladeshi",
                            TemporaryAddress = "Rajshahi, Bangladesh",
                            UniqueStudentAttendanceNumber = 1007
                        },
                        new
                        {
                            Id = 9,
                            AdmissionNo = 1008,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5091),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5092),
                            EnrollmentNo = 2008,
                            FatherContactNumber = "9876543227",
                            FatherNID = "32109876543210988",
                            FatherName = "Kamal Hossain",
                            LocalGuardianContactNumber = "9876543247",
                            LocalGuardianName = "Salam Ahmed",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5092),
                            MotherContactNumber = "9876543237",
                            MotherNID = "32109876543210989",
                            MotherName = "Nazma Hossain",
                            PermanentAddress = "Sylhet, Bangladesh",
                            StandardId = 3,
                            StudentBloodGroup = "A+",
                            StudentContactNumber1 = "9876543217",
                            StudentDOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentEmail = "arif.hossain@example.com",
                            StudentGender = 0,
                            StudentNIDNumber = "32109876543210987",
                            StudentName = "Arif Hossain",
                            StudentNationality = "Bangladeshi",
                            TemporaryAddress = "Sylhet, Bangladesh",
                            UniqueStudentAttendanceNumber = 1008
                        },
                        new
                        {
                            Id = 10,
                            AdmissionNo = 1009,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5096),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5097),
                            EnrollmentNo = 2009,
                            FatherContactNumber = "9876543228",
                            FatherNID = "21098765432109877",
                            FatherName = "Jamil Akter",
                            LocalGuardianContactNumber = "9876543248",
                            LocalGuardianName = "Khaled Rahman",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5096),
                            MotherContactNumber = "9876543238",
                            MotherNID = "21098765432109878",
                            MotherName = "Rina Akter",
                            PermanentAddress = "Dhaka, Bangladesh",
                            StandardId = 4,
                            StudentBloodGroup = "A-",
                            StudentContactNumber1 = "9876543218",
                            StudentDOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentEmail = "sabrina.akter@example.com",
                            StudentGender = 1,
                            StudentNIDNumber = "21098765432109876",
                            StudentName = "Sabrina Akter",
                            StudentNationality = "Bangladeshi",
                            TemporaryAddress = "Dhaka, Bangladesh",
                            UniqueStudentAttendanceNumber = 1009
                        },
                        new
                        {
                            Id = 11,
                            AdmissionNo = 1010,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5100),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5101),
                            EnrollmentNo = 2010,
                            FatherContactNumber = "9876543229",
                            FatherNID = "10987654321098766",
                            FatherName = "Hasan Mahmud",
                            LocalGuardianContactNumber = "9876543249",
                            LocalGuardianName = "Farhana Akter",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5100),
                            MotherContactNumber = "9876543239",
                            MotherNID = "10987654321098767",
                            MotherName = "Nazma Hasan",
                            PermanentAddress = "Chittagong, Bangladesh",
                            StandardId = 4,
                            StudentBloodGroup = "O-",
                            StudentContactNumber1 = "9876543219",
                            StudentDOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentEmail = "rahat.hasan@example.com",
                            StudentGender = 0,
                            StudentNIDNumber = "10987654321098765",
                            StudentName = "Rahat Hasan",
                            StudentNationality = "Bangladeshi",
                            TemporaryAddress = "Chittagong, Bangladesh",
                            UniqueStudentAttendanceNumber = 1010
                        },
                        new
                        {
                            Id = 12,
                            AdmissionNo = 1011,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5104),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5105),
                            EnrollmentNo = 2011,
                            FatherContactNumber = "9876543230",
                            FatherNID = "09876543210987655",
                            FatherName = "Rahim Rahman",
                            LocalGuardianContactNumber = "9876543250",
                            LocalGuardianName = "Kamal Hossain",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5104),
                            MotherContactNumber = "9876543240",
                            MotherNID = "09876543210987656",
                            MotherName = "Sara Rahman",
                            PermanentAddress = "Rajshahi, Bangladesh",
                            StandardId = 4,
                            StudentBloodGroup = "AB-",
                            StudentContactNumber1 = "9876543220",
                            StudentDOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentEmail = "asif.rahman@example.com",
                            StudentGender = 0,
                            StudentNIDNumber = "09876543210987654",
                            StudentName = "Asif Rahman",
                            StudentNationality = "Bangladeshi",
                            TemporaryAddress = "Rajshahi, Bangladesh",
                            UniqueStudentAttendanceNumber = 1011
                        },
                        new
                        {
                            Id = 13,
                            AdmissionNo = 1012,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5108),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5108),
                            EnrollmentNo = 2012,
                            FatherContactNumber = "9876543231",
                            FatherNID = "98765432109876544",
                            FatherName = "Akram Khan",
                            LocalGuardianContactNumber = "9876543251",
                            LocalGuardianName = "Ayesha Begum",
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5108),
                            MotherContactNumber = "9876543241",
                            MotherNID = "98765432109876545",
                            MotherName = "Taslima Khan",
                            PermanentAddress = "Sylhet, Bangladesh",
                            StandardId = 4,
                            StudentBloodGroup = "A+",
                            StudentContactNumber1 = "9876543221",
                            StudentDOB = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentEmail = "mehnaz.khan@example.com",
                            StudentGender = 1,
                            StudentNIDNumber = "98765432109876543",
                            StudentName = "Mehnaz Khan",
                            StudentNationality = "Bangladeshi",
                            TemporaryAddress = "Sylhet, Bangladesh",
                            UniqueStudentAttendanceNumber = 1012
                        });
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletededDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StandardId")
                        .HasColumnType("int");

                    b.Property<int?>("StandardId1")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectCode")
                        .HasColumnType("int");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StandardId");

                    b.HasIndex("StandardId1");

                    b.HasIndex("SubjectCode")
                        .IsUnique()
                        .HasFilter("[SubjectCode] IS NOT NULL");

                    b.ToTable("Subject", "sm");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5144),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5145),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5144),
                            StandardId = 1,
                            SubjectCode = 101,
                            SubjectName = "Mathematics"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5147),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5148),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5147),
                            StandardId = 1,
                            SubjectCode = 102,
                            SubjectName = "Bengali"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5149),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5150),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5149),
                            StandardId = 1,
                            SubjectCode = 103,
                            SubjectName = "Physics"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5151),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5151),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5151),
                            StandardId = 2,
                            SubjectCode = 201,
                            SubjectName = "Mathematics"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5153),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5153),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5153),
                            StandardId = 2,
                            SubjectCode = 202,
                            SubjectName = "Bengali"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5154),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5155),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5155),
                            StandardId = 2,
                            SubjectCode = 203,
                            SubjectName = "Physics"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5156),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5157),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5156),
                            StandardId = 3,
                            SubjectCode = 301,
                            SubjectName = "Mathematics"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5158),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5158),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5158),
                            StandardId = 3,
                            SubjectCode = 302,
                            SubjectName = "Bengali"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5160),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5160),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5160),
                            StandardId = 3,
                            SubjectCode = 303,
                            SubjectName = "Physics"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5161),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5162),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5162),
                            StandardId = 4,
                            SubjectCode = 401,
                            SubjectName = "Mathematics"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5163),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5164),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5163),
                            StandardId = 4,
                            SubjectCode = 402,
                            SubjectName = "Bengali"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5165),
                            DeletededDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5165),
                            ModifiedDate = new DateTime(2024, 5, 18, 23, 15, 13, 585, DateTimeKind.Utc).AddTicks(5165),
                            StandardId = 4,
                            SubjectCode = 403,
                            SubjectName = "Physics"
                        });
                });

            modelBuilder.Entity("SchoolManagements.Infrastructure.Persistences.StudentMarksDetails", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("MarkEntryId")
                        .HasColumnType("int");

                    b.Property<string>("Feedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<int?>("ObtainedScore")
                        .HasColumnType("int");

                    b.Property<int?>("PassStatus")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId", "MarkEntryId");

                    b.ToTable("StudentMarksDetails", "sm");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.AcademicMonth", b =>
                {
                    b.HasOne("SchoolManagements.Domain.Entities.MonthlyPayment", "monthlyPayment")
                        .WithMany("academicMonths")
                        .HasForeignKey("monthlyPaymentId");

                    b.Navigation("monthlyPayment");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.DueBalance", b =>
                {
                    b.HasOne("SchoolManagements.Domain.Entities.MonthlyPayment", null)
                        .WithMany("dueBalances")
                        .HasForeignKey("MonthlyPaymentId");

                    b.HasOne("SchoolManagements.Domain.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.ExamScheduleStandard", b =>
                {
                    b.HasOne("SchoolManagements.Domain.Entities.ExamSchedule", "ExamSchedule")
                        .WithMany("ExamScheduleStandards")
                        .HasForeignKey("ExamScheduleId");

                    b.HasOne("SchoolManagements.Domain.Entities.Standard", null)
                        .WithMany("ExamScheduleStandards")
                        .HasForeignKey("StandardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagements.Domain.Entities.Standard", "Standard")
                        .WithMany()
                        .HasForeignKey("StandardId1");

                    b.Navigation("ExamSchedule");

                    b.Navigation("Standard");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.ExamSubject", b =>
                {
                    b.HasOne("SchoolManagements.Domain.Entities.ExamScheduleStandard", "ExamScheduleStandard")
                        .WithMany("ExamSubjects")
                        .HasForeignKey("ExamScheduleStandardId");

                    b.HasOne("SchoolManagements.Domain.Entities.ExamType", "ExamType")
                        .WithMany("ExamSubjects")
                        .HasForeignKey("ExamTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagements.Domain.Entities.Subject", "Subject")
                        .WithMany("ExamSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamScheduleStandard");

                    b.Navigation("ExamType");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.Fee", b =>
                {
                    b.HasOne("SchoolManagements.Domain.Entities.FeeType", "feeType")
                        .WithMany("FeeList")
                        .HasForeignKey("FeeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagements.Domain.Entities.Standard", "standard")
                        .WithMany()
                        .HasForeignKey("StandardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagements.Domain.Entities.MonthlyPayment", "monthlyPayment")
                        .WithMany("fees")
                        .HasForeignKey("monthlyPaymentId");

                    b.HasOne("SchoolManagements.Domain.Entities.OthersPayment", "othersPayment")
                        .WithMany("fees")
                        .HasForeignKey("othersPaymentId");

                    b.Navigation("feeType");

                    b.Navigation("monthlyPayment");

                    b.Navigation("othersPayment");

                    b.Navigation("standard");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.MonthlyPayment", b =>
                {
                    b.HasOne("SchoolManagements.Domain.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.OtherPaymentDetail", b =>
                {
                    b.HasOne("SchoolManagements.Domain.Entities.OthersPayment", null)
                        .WithMany("otherPaymentDetails")
                        .HasForeignKey("OthersPaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.OthersPayment", b =>
                {
                    b.HasOne("SchoolManagements.Domain.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.PaymentDetail", b =>
                {
                    b.HasOne("SchoolManagements.Domain.Entities.MonthlyPayment", null)
                        .WithMany("PaymentDetails")
                        .HasForeignKey("MonthlyPaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.PaymentMonth", b =>
                {
                    b.HasOne("SchoolManagements.Domain.Entities.MonthlyPayment", null)
                        .WithMany("paymentMonths")
                        .HasForeignKey("MonthlyPaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.Staff", b =>
                {
                    b.HasOne("SchoolManagements.Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("SchoolManagements.Domain.Entities.StaffSalary", "StaffSalary")
                        .WithMany()
                        .HasForeignKey("StaffSalaryId");

                    b.Navigation("Department");

                    b.Navigation("StaffSalary");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.StaffExperience", b =>
                {
                    b.HasOne("SchoolManagements.Domain.Entities.Staff", null)
                        .WithMany("StaffExperiences")
                        .HasForeignKey("StaffId");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.Student", b =>
                {
                    b.HasOne("SchoolManagements.Domain.Entities.Standard", null)
                        .WithMany("Students")
                        .HasForeignKey("StandardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.Subject", b =>
                {
                    b.HasOne("SchoolManagements.Domain.Entities.Standard", null)
                        .WithMany("Subjects")
                        .HasForeignKey("StandardId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SchoolManagements.Domain.Entities.Standard", "Standard")
                        .WithMany()
                        .HasForeignKey("StandardId1");

                    b.Navigation("Standard");
                });

            modelBuilder.Entity("SchoolManagements.Infrastructure.Persistences.StudentMarksDetails", b =>
                {
                    b.HasOne("SchoolManagements.Domain.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.ExamSchedule", b =>
                {
                    b.Navigation("ExamScheduleStandards");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.ExamScheduleStandard", b =>
                {
                    b.Navigation("ExamSubjects");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.ExamType", b =>
                {
                    b.Navigation("ExamSubjects");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.FeeType", b =>
                {
                    b.Navigation("FeeList");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.MonthlyPayment", b =>
                {
                    b.Navigation("PaymentDetails");

                    b.Navigation("academicMonths");

                    b.Navigation("dueBalances");

                    b.Navigation("fees");

                    b.Navigation("paymentMonths");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.OthersPayment", b =>
                {
                    b.Navigation("fees");

                    b.Navigation("otherPaymentDetails");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.Staff", b =>
                {
                    b.Navigation("StaffExperiences");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.Standard", b =>
                {
                    b.Navigation("ExamScheduleStandards");

                    b.Navigation("Students");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("SchoolManagements.Domain.Entities.Subject", b =>
                {
                    b.Navigation("ExamSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
